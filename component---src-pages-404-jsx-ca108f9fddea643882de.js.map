{"version":3,"file":"component---src-pages-404-jsx-ca108f9fddea643882de.js","mappings":"sOAuCA,EArBwB,WAkBtB,OAjBaA,EAAAA,EAAAA,gBAAc,aAiBfC,KAAKC,YAlBnB,ECyCA,EA9CY,SAAC,GAAyF,IAAD,IAAtFC,MAAAA,OAAsF,eAA1EC,YAAAA,OAA0E,eAAxDC,SAAAA,OAAwD,eAAzCC,MAAAA,OAAyC,eAA7BC,SAAAA,OAA6B,MAAlB,KAAkB,EAC7FN,EAAOO,IAGXC,EAOER,EAPFQ,UACcC,EAMZT,EANFU,aACAC,EAKEX,EALFW,QACiBC,EAIfZ,EAJFa,gBACAC,EAGEd,EAHFc,aACWC,EAETf,EAFFgB,UACAC,EACEjB,EADFiB,OAGIC,EAAM,CACVhB,MAAOA,GAASO,EAChBN,YAAaA,GAAeS,EAC5BO,IAAI,GAAIR,GAAUP,GAAQ,IAC1BC,MAAM,GAAIM,GAAUN,GAASU,IAE/B,OACEK,EAAAA,cAACC,EAAAA,EAAD,CAAQnB,MAAOA,EAAOO,aAAcA,EAAca,cAAa,QAAUd,GACvEY,EAAAA,cAAAA,OAAAA,CAAMG,KAAMT,IACZM,EAAAA,cAAAA,OAAAA,CAAMI,KAAK,cAAcC,QAASP,EAAIf,cACtCiB,EAAAA,cAAAA,OAAAA,CAAMI,KAAK,QAAQC,QAASP,EAAIb,QAChCe,EAAAA,cAAAA,OAAAA,CAAMM,SAAS,WAAWD,QAASP,EAAIhB,QACvCkB,EAAAA,cAAAA,OAAAA,CAAMM,SAAS,SAASD,QAASP,EAAIC,MACrCC,EAAAA,cAAAA,OAAAA,CAAMM,SAAS,iBAAiBD,QAASP,EAAIf,cAC7CiB,EAAAA,cAAAA,OAAAA,CAAMM,SAAS,WAAWD,QAASP,EAAIb,QACvCe,EAAAA,cAAAA,OAAAA,CAAMM,SAAS,UAAUD,QAAQ,YACjCL,EAAAA,cAAAA,OAAAA,CAAMM,SAAS,eAAeD,QAASP,EAAIf,cAC3CiB,EAAAA,cAAAA,OAAAA,CAAMI,KAAK,eAAeC,QAAQ,wBAClCL,EAAAA,cAAAA,OAAAA,CAAMI,KAAK,gBAAgBC,QAASP,EAAIhB,QACxCkB,EAAAA,cAAAA,OAAAA,CAAMI,KAAK,cAAcC,QAASP,EAAIC,MACtCC,EAAAA,cAAAA,OAAAA,CAAMI,KAAK,sBAAsBC,QAASP,EAAIf,cAC9CiB,EAAAA,cAAAA,OAAAA,CAAMI,KAAK,gBAAgBC,QAASP,EAAIb,QACxCe,EAAAA,cAAAA,OAAAA,CAAMI,KAAK,oBAAoBC,QAASP,EAAIf,cAC5CiB,EAAAA,cAAAA,OAAAA,CAAMI,KAAK,kBAAkBC,QAASR,IACtCG,EAAAA,cAAAA,OAAAA,CAAMI,KAAK,eAAeC,QAAQ,gCAClCL,EAAAA,cAAAA,OAAAA,CAAMO,IAAI,OAAOC,KAAK,YAAYC,MAAM,QAAQC,MAAMC,EAAAA,EAAAA,YAAW,wBACjEX,EAAAA,cAAAA,OAAAA,CAAMO,IAAI,OAAOC,KAAK,YAAYC,MAAM,QAAQC,MAAMC,EAAAA,EAAAA,YAAW,wBACjEX,EAAAA,cAAAA,OAAAA,CAAMO,IAAI,mBAAmBE,MAAM,UAAUC,MAAMC,EAAAA,EAAAA,YAAW,2BAC7DzB,EAzCP,ECgCA,EAtCe,SAAC,GAAD,IAAGA,EAAH,EAAGA,SAAH,IAAa0B,UAAAA,OAAb,kBACbZ,EAAAA,cAACA,EAAAA,SAAD,KACEA,EAAAA,cAACa,EAAAA,GAAD,CACEC,OAAQ,SAACC,GAAD,MAAQ,CACd,IAAK,CACHC,UAAU,UACV,WAAY,CACVA,UAAU,WAEZ,UAAW,CACTA,UAAU,YAGdC,KAAM,CACJC,SAAS,OACTC,qBAAqB,QAEvBC,IAAK,CACHC,YAAY,QAEdC,IAAK,CACHC,WAAW,YACXL,SAAS,OAEX,WAAY,CACVM,QAAQ,QAEV,cAAe,CACbC,iBAAiBC,EAAAA,EAAAA,IAAIX,EAAD,kBACpBY,OAAOD,EAAAA,EAAAA,IAAIX,EAAD,sBA3BhB,IA+BAf,EAAAA,cAAC4B,EAAD,MACA5B,EAAAA,cAAAA,OAAAA,CAAMY,UAAWA,GAAY1B,GAlCjC,E,SCwCA,EAhCgB,SAAC,GAAD,IACd2C,EADc,EACdA,MACAC,EAFc,EAEdA,OAFc,IAGdC,OAAAA,OAHc,MAGL,EAHK,MAIdC,GAAAA,OAJc,eAKdC,KAAAA,OALc,eAMdC,SAAAA,OANc,eAOdhD,SAAAA,OAPc,MAOH,KAPG,MAQd0B,UAAAA,OARc,kBAUduB,EAAAA,EAAAA,IAACC,EAAAA,EAAD,CACEC,GAAI,CACFC,SAAS,WACTC,MAAM,OACNC,OAAO,OACPC,WAAYT,EACZP,gBAAiBO,EACjB,gBAAiB,CACfL,MAAOM,EACPA,KAAK,gBAEPC,SAAAA,GAEFL,MAAOA,EACPC,OAAQA,EACRC,OAAQA,EACRnB,UAAWA,GAEV1B,EA5BL,E,UCCMwD,IAZOC,EAAAA,EAAAA,IAAH,gUAYKA,EAAAA,EAAAA,IAAH,sHASNC,GAAaD,EAAAA,EAAAA,IAAH,sHASVE,GAAkBC,EAAAA,EAAAA,IAAH,iEACjBJ,GAGEK,GAAsBD,EAAAA,EAAAA,IAAH,kEACrBF,GAGG,SAASI,EAAT,GAA8D,IAA5C9D,EAA2C,EAA3CA,SACvB,OACEiD,EAAAA,EAAAA,IAAAA,MAAAA,CACEW,KAAKA,EAAAA,EAAAA,IAAF,6JACYD,IAQd3D,EAKP,CAAO,SAAS+D,EAAT,GAAkE,IAA5C/D,EAA2C,EAA3CA,SAC3B,OACEiD,EAAAA,EAAAA,IAAAA,MAAAA,CACEW,KAAKA,EAAAA,EAAAA,IAAF,6JACYC,IAQd7D,EAKP,CAAO,IC5EMgE,EAAS,CAAC,OAAD,gBCKhBC,EAAQ,CACZC,SAAU,CACRC,OACElB,EAAAA,EAAAA,IAAAA,UAAAA,CACEmB,YAAY,MACZC,eAAe,QACfC,iBAAiB,KACjBC,OAAO,wCAGXC,QAAQ,aAEVC,OAAQ,CACNN,OACElB,EAAAA,EAAAA,IAAAA,OAAAA,CAAMyB,EAAE,0GAEVF,QAAQ,aAEVG,QAAS,CACPR,OACElB,EAAAA,EAAAA,IAACnC,EAAAA,SAAD,MACEmC,EAAAA,EAAAA,IAAAA,OAAAA,CAAMyB,EAAE,4JADV,KAGEzB,EAAAA,EAAAA,IAAAA,OAAAA,CAAMyB,EAAE,sNAGZF,QAAQ,aAEVhB,OAAQ,CACNW,OACElB,EAAAA,EAAAA,IAACnC,EAAAA,SAAD,MACEmC,EAAAA,EAAAA,IAAAA,OAAAA,CAAMyB,EAAE,4KACRzB,EAAAA,EAAAA,IAAAA,OAAAA,CAAMyB,EAAE,2JAGZF,QAAQ,gBAEVI,IAAK,CACHT,OACElB,EAAAA,EAAAA,IAAAA,OAAAA,CAAMyB,EAAE,iJAEVF,QAAQ,aAEVK,KAAM,CACJV,OACElB,EAAAA,EAAAA,IAAAA,UAAAA,CACEoB,eAAe,QACfC,iBAAiB,KACjBC,OAAO,oEAGXC,QAAQ,aAEVM,MAAO,CACLX,OACElB,EAAAA,EAAAA,IAAAA,OAAAA,CACEmB,YAAY,MACZM,EAAE,gUAGNF,QAAQ,gBAkCZ,EAlBY,SAAC,GAAD,QAAGO,OAAAA,OAAH,aAAmBtC,MAAAA,OAAnB,WAA+BY,EAA/B,EAA+BA,MAAO2B,EAAtC,EAAsCA,KAAMC,EAA5C,EAA4CA,KAAMC,EAAlD,EAAkDA,IAAlD,IAAuDC,aAAAA,OAAvD,gBACVlC,EAAAA,EAAAA,IAAAA,MAAAA,CACEE,GAAI,CACFC,SAAS,WACT2B,OAAQA,EAAM,sBACdhC,KAAMgC,EAAM,sBACZzC,QAAS6C,EAAenB,EAAH,QACrBvB,MAAAA,EACAY,MAAAA,EACA4B,KAAAA,EACAC,IAAAA,GAEFV,QAASP,EAAMe,GAAMR,SAEpBP,EAAMe,GAAMb,MAdjB,EClDA,EAnBgB,SAAC,GAAD,IAAGxB,EAAH,EAAGA,MAAOC,EAAV,EAAUA,OAAQ5C,EAAlB,EAAkBA,SAAlB,IAA4B0B,UAAAA,OAA5B,eAA4CmB,OAAAA,OAA5C,MAAqD,EAArD,SACdI,EAAAA,EAAAA,IAACC,EAAAA,EAAD,CACEC,GAAI,CACFiC,QAAS,CAAC,EAAG,EAAG,EAAG,GACnB9C,QAAQ,OACR+C,cAAc,SACdC,WAAW,SACXC,eAAe,SACfC,OAAQ,IAEV7C,MAAOA,EACPC,OAAQA,EACRC,OAAQA,EACRnB,UAAWA,GAEV1B,EAfL,ECEA,EANc,SAAC,GAAD,QAAG0B,UAAAA,OAAH,WAAmB1B,EAAnB,EAAmBA,SAAnB,OACZiD,EAAAA,EAAAA,IAAAA,MAAAA,CAAKE,GAAI,CAAEE,MAAO,CAAC,OAAD,mCAAiDoC,UAAU,QAAW/D,UAAWA,GAChG1B,EAFL,ECkDA,EA9CiB,kBACf,gBAAC,EAAD,KACE,gBAAC,EAAD,CAAKJ,MAAM,oBACX,gBAAC,IAAD,CAAU8F,MAAO,GACf,2BACE,gBAAC,EAAD,CAAS/C,MAAO,GAAKC,OAAQ,EAAGC,OAAQ,GACtC,gBAACiB,EAAD,KACE,gBAAC,EAAD,CAAKkB,KAAK,WAAWG,cAAY,EAAC9B,MAAO,GAAI0B,QAAM,EAACtC,MAAM,cAAcwC,KAAK,MAAMC,IAAI,QACvF,gBAAC,EAAD,CAAKF,KAAK,OAAO3B,MAAO,GAAI0B,QAAM,EAACtC,MAAM,WAAWwC,KAAK,MAAMC,IAAI,QACnE,gBAAC,EAAD,CAAKF,KAAK,MAAM3B,MAAO,EAAGZ,MAAM,cAAcwC,KAAK,MAAMC,IAAI,SAE/D,gBAACnB,EAAD,KACE,gBAAC,EAAD,CAAKiB,KAAK,UAAUG,cAAY,EAAC9B,MAAO,GAAIZ,MAAM,YAAYwC,KAAK,MAAMC,IAAI,QAC7E,gBAAC,EAAD,CAAKF,KAAK,WAAW3B,MAAO,GAAI0B,QAAM,EAACtC,MAAM,iBAAiBwC,KAAK,MAAMC,IAAI,QAC7E,gBAAC,EAAD,CAAKF,KAAK,SAAS3B,MAAO,GAAIZ,MAAM,cAAcwC,KAAK,MAAMC,IAAI,QACjE,gBAAC,EAAD,CAAKF,KAAK,WAAW3B,MAAO,GAAI0B,QAAM,EAACtC,MAAM,eAAewC,KAAK,MAAMC,IAAI,QAC3E,gBAAC,EAAD,CAAKF,KAAK,QAAQ3B,MAAO,GAAI0B,QAAM,EAACtC,MAAM,YAAYwC,KAAK,MAAMC,IAAI,QACrE,gBAAC,EAAD,CAAKF,KAAK,SAAS3B,MAAO,EAAGZ,MAAM,eAAewC,KAAK,MAAMC,IAAI,QACjE,gBAAC,EAAD,CAAKF,KAAK,SAASG,cAAY,EAAC9B,MAAO,EAAGZ,MAAM,eAAewC,KAAK,MAAMC,IAAI,SAEhF,gBAAC,EAAD,CAAKF,KAAK,SAASG,cAAY,EAAC9B,MAAO,GAAIZ,MAAM,cAAcwC,KAAK,KAAKC,IAAI,QAC7E,gBAAC,EAAD,CAAKF,KAAK,SAAS3B,MAAO,EAAGZ,MAAM,eAAewC,KAAK,KAAKC,IAAI,QAChE,gBAAC,EAAD,CAAKF,KAAK,SAAS3B,MAAO,GAAIZ,MAAM,eAAewC,KAAK,MAAMC,IAAI,QAClE,gBAAC,EAAD,CAAKF,KAAK,SAAS3B,MAAO,EAAGZ,MAAM,eAAewC,KAAK,MAAMC,IAAI,QACjE,gBAAC,EAAD,CAAKF,KAAK,SAASG,cAAY,EAAC9B,MAAO,GAAIZ,MAAM,cAAcwC,KAAK,MAAMC,IAAI,QAC9E,gBAAC,EAAD,CAAKF,KAAK,WAAW3B,MAAO,EAAG0B,QAAM,EAACtC,MAAM,cAAcwC,KAAK,MAAMC,IAAI,OACzE,gBAAC,EAAD,CAAKF,KAAK,SAAS3B,MAAO,GAAIZ,MAAM,aAAawC,KAAK,MAAMC,IAAI,OAChE,gBAAC,EAAD,CAAKF,KAAK,MAAMG,cAAY,EAAC9B,MAAO,GAAIZ,MAAM,cAAcwC,KAAK,KAAKC,IAAI,QAC1E,gBAAC,EAAD,CAAKF,KAAK,MAAM3B,MAAO,EAAGZ,MAAM,eAAewC,KAAK,MAAMC,IAAI,QAC9D,gBAAC,EAAD,CAAKF,KAAK,MAAM3B,MAAO,GAAIZ,MAAM,eAAewC,KAAK,MAAMC,IAAI,QAC/D,gBAAC,EAAD,CAAKF,KAAK,OAAO3B,MAAO,GAAI0B,QAAM,EAACtC,MAAM,cAAcwC,KAAK,MAAMC,IAAI,QACtE,gBAAC,EAAD,CAAKF,KAAK,OAAO3B,MAAO,EAAG0B,QAAM,EAACtC,MAAM,cAAcwC,KAAK,MAAMC,IAAI,SAEvE,gBAAC,EAAD,CAAS/B,GAAI,CAAEwC,QAAQ,gBAAmBhD,MAAO,GAAKC,OAAQ,EAAGC,OAAQ,GACvE,gBAAC,EAAD,KACE,gBAAC,QAAD,6BACA,gBAAC,OAAD,mBACa,gBAAC,EAAA+C,KAAD,CAAMC,GAAG,KAAT,YADb,SApCK,C","sources":["webpack://cara/./node_modules/@lekoarts/gatsby-theme-cara/src/hooks/use-site-metadata.tsx","webpack://cara/./node_modules/@lekoarts/gatsby-theme-cara/src/components/seo.tsx","webpack://cara/./node_modules/@lekoarts/gatsby-theme-cara/src/components/layout.tsx","webpack://cara/./node_modules/@lekoarts/gatsby-theme-cara/src/elements/divider.tsx","webpack://cara/./node_modules/@lekoarts/gatsby-theme-cara/src/styles/animations.tsx","webpack://cara/./node_modules/@lekoarts/gatsby-theme-cara/src/styles/utils.tsx","webpack://cara/./node_modules/@lekoarts/gatsby-theme-cara/src/components/svg.tsx","webpack://cara/./node_modules/@lekoarts/gatsby-theme-cara/src/elements/content.tsx","webpack://cara/./node_modules/@lekoarts/gatsby-theme-cara/src/elements/inner.tsx","webpack://cara/./src/pages/404.jsx"],"sourcesContent":["import { graphql, useStaticQuery } from \"gatsby\"\n\ntype UseSiteMetadataProps = {\n  site: {\n    siteMetadata: {\n      siteTitle: string\n      siteTitleAlt: string\n      siteHeadline: string\n      siteUrl: string\n      siteDescription: string\n      siteLanguage: string\n      siteImage: string\n      author: string\n      [key: string]: unknown\n    }\n  }\n}\n\nconst useSiteMetadata = () => {\n  const data = useStaticQuery<UseSiteMetadataProps>(graphql`\n    query {\n      site {\n        siteMetadata {\n          siteTitle\n          siteTitleAlt\n          siteHeadline\n          siteUrl\n          siteDescription\n          siteLanguage\n          siteImage\n          author\n        }\n      }\n    }\n  `)\n\n  return data.site.siteMetadata\n}\n\nexport default useSiteMetadata\n","import * as React from \"react\"\nimport { Helmet } from \"react-helmet\"\nimport { withPrefix } from \"gatsby\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\n\ntype Props = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: React.ReactNode\n}\n\nconst SEO = ({ title = ``, description = ``, pathname = ``, image = ``, children = null }: Props) => {\n  const site = useSiteMetadata()\n\n  const {\n    siteTitle,\n    siteTitleAlt: defaultTitle,\n    siteUrl,\n    siteDescription: defaultDescription,\n    siteLanguage,\n    siteImage: defaultImage,\n    author,\n  } = site\n\n  const seo = {\n    title: title || defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    image: `${siteUrl}${image || defaultImage}`,\n  }\n  return (\n    <Helmet title={title} defaultTitle={defaultTitle} titleTemplate={`%s | ${siteTitle}`}>\n      <html lang={siteLanguage} />\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image:alt\" content={seo.description} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:image:alt\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-cara\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix(`/favicon-32x32.png`)} />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix(`/favicon-16x16.png`)} />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix(`/apple-touch-icon.png`)} />\n      {children}\n    </Helmet>\n  )\n}\n\nexport default SEO\n","import * as React from \"react\"\nimport { get } from \"theme-ui\"\nimport { Global } from \"@emotion/react\"\nimport SEO from \"./seo\"\n\ntype LayoutProps = { children: React.ReactNode; className?: string }\n\nconst Layout = ({ children, className = `` }: LayoutProps) => (\n  <React.Fragment>\n    <Global\n      styles={(t) => ({\n        \"*\": {\n          boxSizing: `inherit`,\n          \"&:before\": {\n            boxSizing: `inherit`,\n          },\n          \"&:after\": {\n            boxSizing: `inherit`,\n          },\n        },\n        html: {\n          fontSize: `18px`,\n          WebkitTextSizeAdjust: `100%`,\n        },\n        img: {\n          borderStyle: `none`,\n        },\n        pre: {\n          fontFamily: `monospace`,\n          fontSize: `1em`,\n        },\n        \"[hidden]\": {\n          display: `none`,\n        },\n        \"::selection\": {\n          backgroundColor: get(t, `colors.primary`),\n          color: get(t, `colors.background`),\n        },\n      })}\n    />\n    <SEO />\n    <main className={className}>{children}</main>\n  </React.Fragment>\n)\n\nexport default Layout\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport { ParallaxLayer } from \"@react-spring/parallax\"\n\ntype DividerProps = {\n  speed: number\n  offset: number\n  children?: React.ReactNode\n  bg?: string\n  fill?: string\n  clipPath?: string\n  className?: string\n  factor?: number\n}\n\nconst Divider = ({\n  speed,\n  offset,\n  factor = 1,\n  bg = ``,\n  fill = ``,\n  clipPath = ``,\n  children = null,\n  className = ``,\n}: DividerProps) => (\n  <ParallaxLayer\n    sx={{\n      position: `absolute`,\n      width: `full`,\n      height: `full`,\n      background: bg,\n      backgroundColor: bg,\n      \"#contact-wave\": {\n        color: fill,\n        fill: `currentColor`,\n      },\n      clipPath,\n    }}\n    speed={speed}\n    offset={offset}\n    factor={factor}\n    className={className}\n  >\n    {children}\n  </ParallaxLayer>\n)\n\nexport default Divider\n","/** @jsx jsx */\nimport * as React from \"react\"\nimport { keyframes, css, jsx } from \"@emotion/react\"\n\nconst wave = keyframes`\n  0% {\n    d: path(\"M 0 100 Q 250 50 400 200 Q 550 350 800 300 L 800 0 L 0 0 L 0 100 Z\");\n  }\n  50% {\n    d: path(\"M 0 100 Q 200 150 400 200 Q 600 250 800 300 L 800 0 L 0 0 L 0 100 Z\");\n  }\n  100% {\n    d: path(\"M 0 100 Q 150 350 400 200 Q 650 50 800 300 L 800 0 L 0 0 L 0 100 Z\");\n  }\n`\n\nconst upDown = keyframes`\n  from {\n    transform: translateY(0);\n  }\n  to {\n    transform: translateY(30px);\n  }\n`\n\nconst upDownWide = keyframes`\n  from {\n    transform: translateY(0);\n  }\n  to {\n    transform: translateY(200px);\n  }\n`\n\nconst upDownAnimation = css`\n  ${upDown} 4s ease-in-out infinite alternate;\n`\n\nconst upDownWideAnimation = css`\n  ${upDownWide} 18s ease-in-out infinite alternate;\n`\n\nexport function UpDown({ children }: { children: React.ReactNode }) {\n  return (\n    <div\n      css={css`\n        animation: ${upDownAnimation};\n        position: absolute;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n      `}\n    >\n      {children}\n    </div>\n  )\n}\n\nexport function UpDownWide({ children }: { children: React.ReactNode }) {\n  return (\n    <div\n      css={css`\n        animation: ${upDownWideAnimation};\n        position: absolute;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n      `}\n    >\n      {children}\n    </div>\n  )\n}\n\nexport const waveAnimation = (length: string) => `${wave} ${length} linear infinite alternate`\n","export const hidden = [`none`, `none`, `block`]\n","/** @jsx jsx */\nimport * as React from \"react\"\nimport { jsx } from \"theme-ui\"\nimport { hidden } from \"../styles/utils\"\n\nconst icons = {\n  triangle: {\n    shape: (\n      <polygon\n        strokeWidth=\"1px\"\n        strokeLinejoin=\"round\"\n        strokeMiterlimit=\"10\"\n        points=\"14.921,2.27 28.667,25.5 1.175,25.5 \"\n      />\n    ),\n    viewBox: `0 0 30 30`,\n  },\n  circle: {\n    shape: (\n      <path d=\"M15,30A15,15,0,1,1,30,15,15,15,0,0,1,15,30ZM15,6.23A8.77,8.77,0,1,0,23.77,15,8.77,8.77,0,0,0,15,6.23Z\" />\n    ),\n    viewBox: `0 0 30 30`,\n  },\n  arrowUp: {\n    shape: (\n      <React.Fragment>\n        <path d=\"M28.74,20.81H1.26a1.26,1.26,0,0,1-1-2L14.16.5a1.25,1.25,0,0,1,1-.5h0a1.24,1.24,0,0,1,1,.51L29.75,18.8a1.25,1.25,0,0,1-1,2ZM3.81,18.29H26.22L15.16,3.37Z\" />\n        {` `}\n        <path d=\"M28.74,42H1.26a1.28,1.28,0,0,1-1.13-.71A1.26,1.26,0,0,1,.26,40l13.9-18.29a1.28,1.28,0,0,1,1-.5h0a1.24,1.24,0,0,1,1,.51L29.75,40a1.26,1.26,0,0,1,.12,1.32A1.28,1.28,0,0,1,28.74,42ZM3.81,39.47H26.22L15.16,24.55Z\" />\n      </React.Fragment>\n    ),\n    viewBox: `0 0 30 42`,\n  },\n  upDown: {\n    shape: (\n      <React.Fragment>\n        <path d=\"M28.74,44.58a1.28,1.28,0,0,1-1-.51L15.16,27.13l-12.89,17a1.26,1.26,0,1,1-2-1.53l13.9-18.29a1.34,1.34,0,0,1,1-.5,1.24,1.24,0,0,1,1,.51L29.75,42.56a1.27,1.27,0,0,1-1,2Z\" />\n        <path d=\"M14.83,20.82h0a1.28,1.28,0,0,1-1-.52L.25,2a1.27,1.27,0,0,1,2-1.51L14.84,17.45,27.73.5a1.26,1.26,0,0,1,2,1.53L15.84,20.32A1.28,1.28,0,0,1,14.83,20.82Z\" />\n      </React.Fragment>\n    ),\n    viewBox: `0 0 30 44.58`,\n  },\n  box: {\n    shape: (\n      <path d=\"M28,2V28H2V2H28m.13-2H1.88A1.88,1.88,0,0,0,0,1.88V28.13A1.88,1.88,0,0,0,1.88,30H28.13A1.87,1.87,0,0,0,30,28.13V1.88A1.88,1.88,0,0,0,28.13,0Z\" />\n    ),\n    viewBox: `0 0 30 30`,\n  },\n  hexa: {\n    shape: (\n      <polygon\n        strokeLinejoin=\"round\"\n        strokeMiterlimit=\"10\"\n        points=\"27.5,21.904 15,28.809  2.5,21.904 2.5,8.095 15,1.19 27.5,8.095 \"\n      />\n    ),\n    viewBox: `0 0 30 30`,\n  },\n  cross: {\n    shape: (\n      <path\n        strokeWidth=\"3px\"\n        d=\"M60.5,50l34.8-34.8c2.9-2.9,2.9-7.6,0-10.5c-2.9-2.9-7.6-2.9-10.5,0L50,39.5L15.2,4.7c-2.9-2.9-7.6-2.9-10.5,0    c-2.9,2.9-2.9,7.6,0,10.5L39.5,50L4.7,84.8c-2.9,2.9-2.9,7.6,0,10.5c1.4,1.4,3.3,2.2,5.2,2.2s3.8-0.7,5.2-2.2L50,60.5l34.8,34.8    c1.4,1.4,3.3,2.2,5.2,2.2c1.9,0,3.8-0.7,5.2-2.2c2.9-2.9,2.9-7.6,0-10.5L60.5,50z\"\n      />\n    ),\n    viewBox: `0 0 100 100`,\n  },\n}\n\ntype IconType = \"triangle\" | \"circle\" | \"arrowUp\" | \"upDown\" | \"box\" | \"hexa\" | \"cross\"\n\ntype SVGProps = {\n  stroke?: boolean\n  color?: string | number | any\n  width: number\n  icon: IconType\n  left: string\n  top: string\n  hiddenMobile?: boolean\n}\n\nconst Svg = ({ stroke = false, color = ``, width, icon, left, top, hiddenMobile = false }: SVGProps) => (\n  <svg\n    sx={{\n      position: `absolute`,\n      stroke: stroke ? `currentColor` : `none`,\n      fill: stroke ? `none` : `currentColor`,\n      display: hiddenMobile ? hidden : `block`,\n      color,\n      width,\n      left,\n      top,\n    }}\n    viewBox={icons[icon].viewBox}\n  >\n    {icons[icon].shape}\n  </svg>\n)\n\nexport default Svg\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport { ParallaxLayer } from \"@react-spring/parallax\"\n\ntype ContentProps = {\n  speed: number\n  offset: number\n  children: React.ReactNode\n  className?: string\n  factor?: number\n}\n\nconst Content = ({ speed, offset, children, className = ``, factor = 1 }: ContentProps) => (\n  <ParallaxLayer\n    sx={{\n      padding: [3, 4, 4, 5],\n      display: `flex`,\n      flexDirection: `column`,\n      alignItems: `center`,\n      justifyContent: `center`,\n      zIndex: 50,\n    }}\n    speed={speed}\n    offset={offset}\n    factor={factor}\n    className={className}\n  >\n    {children}\n  </ParallaxLayer>\n)\n\nexport default Content\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\n\ntype InnerProps = {\n  className?: string\n  children: React.ReactNode\n}\n\nconst Inner = ({ className = ``, children }: InnerProps) => (\n  <div sx={{ width: [`full`, `full`, `full`, `full`, `full`, `2/3`], textAlign: `left` }} className={className}>\n    {children}\n  </div>\n)\n\nexport default Inner\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport { Parallax } from \"@react-spring/parallax\"\nimport { Themed } from \"theme-ui\"\nimport Layout from \"@lekoarts/gatsby-theme-cara/src/components/layout\"\nimport Divider from \"@lekoarts/gatsby-theme-cara/src/elements/divider\"\nimport { UpDown, UpDownWide } from \"@lekoarts/gatsby-theme-cara/src/styles/animations\"\nimport Svg from \"@lekoarts/gatsby-theme-cara/src/components/svg\"\nimport Seo from \"@lekoarts/gatsby-theme-cara/src/components/seo\"\nimport Content from \"@lekoarts/gatsby-theme-cara/src/elements/content\"\nimport Inner from \"@lekoarts/gatsby-theme-cara/src/elements/inner\"\n\nconst NotFound = () => (\n  <Layout>\n    <Seo title=\"404 - Not Found\" />\n    <Parallax pages={1}>\n      <div>\n        <Divider speed={0.2} offset={0} factor={1}>\n          <UpDown>\n            <Svg icon=\"triangle\" hiddenMobile width={48} stroke color=\"icon_orange\" left=\"10%\" top=\"20%\" />\n            <Svg icon=\"hexa\" width={48} stroke color=\"icon_red\" left=\"60%\" top=\"70%\" />\n            <Svg icon=\"box\" width={6} color=\"icon_darker\" left=\"60%\" top=\"15%\" />\n          </UpDown>\n          <UpDownWide>\n            <Svg icon=\"arrowUp\" hiddenMobile width={16} color=\"icon_blue\" left=\"80%\" top=\"10%\" />\n            <Svg icon=\"triangle\" width={12} stroke color=\"icon_brightest\" left=\"90%\" top=\"50%\" />\n            <Svg icon=\"circle\" width={16} color=\"icon_darker\" left=\"70%\" top=\"90%\" />\n            <Svg icon=\"triangle\" width={16} stroke color=\"icon_darkest\" left=\"30%\" top=\"65%\" />\n            <Svg icon=\"cross\" width={16} stroke color=\"icon_pink\" left=\"28%\" top=\"15%\" />\n            <Svg icon=\"circle\" width={6} color=\"icon_darkest\" left=\"75%\" top=\"10%\" />\n            <Svg icon=\"upDown\" hiddenMobile width={8} color=\"icon_darkest\" left=\"45%\" top=\"10%\" />\n          </UpDownWide>\n          <Svg icon=\"circle\" hiddenMobile width={24} color=\"icon_darker\" left=\"5%\" top=\"70%\" />\n          <Svg icon=\"circle\" width={6} color=\"icon_darkest\" left=\"4%\" top=\"20%\" />\n          <Svg icon=\"circle\" width={12} color=\"icon_darkest\" left=\"50%\" top=\"60%\" />\n          <Svg icon=\"upDown\" width={8} color=\"icon_darkest\" left=\"95%\" top=\"90%\" />\n          <Svg icon=\"upDown\" hiddenMobile width={24} color=\"icon_darker\" left=\"40%\" top=\"80%\" />\n          <Svg icon=\"triangle\" width={8} stroke color=\"icon_darker\" left=\"25%\" top=\"5%\" />\n          <Svg icon=\"circle\" width={64} color=\"icon_green\" left=\"95%\" top=\"5%\" />\n          <Svg icon=\"box\" hiddenMobile width={64} color=\"icon_purple\" left=\"5%\" top=\"90%\" />\n          <Svg icon=\"box\" width={6} color=\"icon_darkest\" left=\"10%\" top=\"10%\" />\n          <Svg icon=\"box\" width={12} color=\"icon_darkest\" left=\"40%\" top=\"30%\" />\n          <Svg icon=\"hexa\" width={16} stroke color=\"icon_darker\" left=\"10%\" top=\"50%\" />\n          <Svg icon=\"hexa\" width={8} stroke color=\"icon_darker\" left=\"80%\" top=\"70%\" />\n        </Divider>\n        <Content sx={{ variant: `texts.bigger` }} speed={0.4} offset={0} factor={1}>\n          <Inner>\n            <Themed.h1>404 - Page not found</Themed.h1>\n            <Themed.p>\n              Go back to <Link to=\"/\">homepage</Link>.\n            </Themed.p>\n          </Inner>\n        </Content>\n      </div>\n    </Parallax>\n  </Layout>\n)\n\nexport default NotFound\n"],"names":["useStaticQuery","site","siteMetadata","title","description","pathname","image","children","useSiteMetadata","siteTitle","defaultTitle","siteTitleAlt","siteUrl","defaultDescription","siteDescription","siteLanguage","defaultImage","siteImage","author","seo","url","React","Helmet","titleTemplate","lang","name","content","property","rel","type","sizes","href","withPrefix","className","Global","styles","t","boxSizing","html","fontSize","WebkitTextSizeAdjust","img","borderStyle","pre","fontFamily","display","backgroundColor","get","color","SEO","speed","offset","factor","bg","fill","clipPath","jsx","ParallaxLayer","sx","position","width","height","background","upDown","keyframes","upDownWide","upDownAnimation","css","upDownWideAnimation","UpDown","UpDownWide","hidden","icons","triangle","shape","strokeWidth","strokeLinejoin","strokeMiterlimit","points","viewBox","circle","d","arrowUp","box","hexa","cross","stroke","icon","left","top","hiddenMobile","padding","flexDirection","alignItems","justifyContent","zIndex","textAlign","pages","variant","Link","to"],"sourceRoot":""}